---
- name: "OBJECT DIFF: Get the current controller user to determine if it is super-admin"
  ansible.builtin.set_fact:
    __controller_api_current_user_check_is_admin: "{{ lookup(controller_api_plugin, 'users',
                                                              query_params={'username': controller_username},
                                                              host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs)
                                                   }}"

- name: "Role differences (block)"
  when:
    - __controller_api_current_user_check_is_admin.is_superuser
  block:
    - name: "Gets current Organizations configured"
      ansible.builtin.set_fact:
        __controller_api_organizations: "{{ query(controller_api_plugin, 'organizations',
                                                  host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs)
                                         }}"

    - name: "OBJECT DIFF: Find the difference of Organizations between what is on the Controller versus curated list."
      ansible.builtin.set_fact:
        __organizations_difference: "{{ lookup('redhat_cop.controller_configuration.controller_object_diff',
                                                api_list=__controller_api_organizations, compare_list=controller_organizations,
                                                with_present=false, set_absent=true)
                                     }}"

    - name: "Sets Organization differences"
      vars:
        __api_url_users: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/users/"
        __api_url_admins: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/admins/"
        __api_url_inventories: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/inventories/"
        __api_url_teams: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/teams/"
        __api_url_projects: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/projects/"
        __api_url_job_templates: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/job_templates/"
        __api_url_workflow_job_templates: "api/{{ controller_api_version }}/organizations/{{ __org.name | urlencode }}/workflow_job_templates/"
      ansible.builtin.set_fact:
        controller_organizations: "{{ controller_organizations | combine(__org) }}"
      loop: "{{ __organizations_difference }}"
      loop_control:
        loop_var: __org
      when: protect_not_empty_orgs is not defined or not protect_not_empty_orgs or
        ( {{ query(controller_api_plugin, __api_url_users, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_admins, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_inventories, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_teams, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_projects, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_job_templates, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }} and
          {{ query(controller_api_plugin, __api_url_workflow_job_templates, host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }})
...
