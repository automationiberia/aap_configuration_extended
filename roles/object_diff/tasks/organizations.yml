---
- name: "OBJECT DIFF: Get the current controller user to determine if it is super-admin"
  ansible.builtin.set_fact:
    __controller_api_current_user_check_is_admin: "{{ lookup(controller_api_plugin, 'users',
                                                              query_params={'username': controller_username},
                                                              host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs)
                                                   }}"

- name: "Role differences (block)"
  when:
    - __controller_api_current_user_check_is_admin.is_superuser
  block:
    - name: "Gets current Organizations configured"
      ansible.builtin.set_fact:
        __controller_api_organizations: "{{ query(controller_api_plugin, 'organizations',
                                                  host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs)
                                         }}"

    - name: "OBJECT DIFF: Find the difference of Organizations between what is on the Controller versus curated list."
      ansible.builtin.set_fact:
        __organizations_difference: "{{ lookup('redhat_cop.controller_configuration.controller_object_diff',
                                                api_list=__controller_api_organizations, compare_list=controller_organizations,
                                                with_present=false, set_absent=true)
                                     }}"
    - name: "Set list __list_orgs_empty when protect_not_empty_orgs"
      vars:
        __bool_empty_users: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/users/',
                          host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_admins: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/admins/',
                           host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_inventories: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/inventories/',
                                host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_teams: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/teams/',
                          host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_projects: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/projects/',
                             host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_job_templates: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/job_templates/',
                                  host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
        __bool_empty_workflow_job_templates: "{{ query(controller_api_plugin, 'api/' + controller_api_version + '/organizations/' + (__org.name | urlencode) + '/workflow_job_templates/',
                                           host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs) | length == 0 }}"
      ansible.builtin.set_fact:
        __list_orgs_empty: "{{ __list_orgs_empty | default([]) + [__org.name] }}"
      loop: "{{ __organizations_difference }}"
      loop_control:
        loop_var: __org
      when: protect_not_empty_orgs is defined and protect_not_empty_orgs and
            __bool_empty_users and
            __bool_empty_admins and
            __bool_empty_inventories and
            __bool_empty_teams and
            __bool_empty_projects and
            __bool_empty_job_templates and
            __bool_empty_workflow_job_templates

    - name: "Sets Organization differences"
      ansible.builtin.set_fact:
        controller_organizations: "{{ controller_organizations | combine(__org) }}"
      loop: "{{ __organizations_difference }}"
      loop_control:
        loop_var: __org
      when: protect_not_empty_orgs is not defined or not protect_not_empty_orgs or __org.name in __list_orgs_empty
...
