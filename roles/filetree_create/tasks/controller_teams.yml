---
- name: "Get current Teams from the API"
  ansible.builtin.set_fact:
    teams_lookvar: "{{ query(controller_api_plugin, 'api/controller/v2/teams/',
                             query_params=(query_params | combine({'organization': organization_id})) if organization_id is defined else query_params,
                             host=aap_hostname, oauth_token=aap_oauthtoken, verify_ssl=aap_validate_certs,
                             return_all=true, max_objects=query_controller_api_max_objects)
                    }}"
  vars:
    query_params:
      order_by: 'organization,id'
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Block for to generate flatten output"
  when:
    - flatten_output is defined
    - flatten_output | bool
  vars:
    __dest: "{{ output_path }}/controller_teams.yaml"
  block:
    - name: "Add current teams to the controller_teams flat file"
      ansible.builtin.blockinfile:
        create: true
        mode: "0644"
        insertafter: EOF
        path: "{{ __dest }}"
        marker: ""
        block: "{{ lookup('template', 'templates/controller_teams.j2') }}"
      vars:
        team_organization: "{{ current_teams_asset_value.summary_fields.organization.name | default(organization, true) | regex_replace('/', '_') }}"
        team_id: "{{ current_teams_asset_value.id }}"
        team_name: "{{ current_teams_asset_value.name | regex_replace('/', '_') }}"
        last_team: "{{ current_team_index == ((teams_lookvar | length) - 1) }}"
      loop: "{{ teams_lookvar }}"
      loop_control:
        index_var: current_team_index
        loop_var: current_teams_asset_value
        label: "{{ __dest }}"

    - name: "Remove all the blank lines introduced by the last task"
      ansible.builtin.lineinfile:
        path: "{{ __dest }}"
        line: ''
        state: absent

- name: "Block for to generate the filetre_create normal output"
  when: flatten_output is not defined or not (flatten_output | bool)
  block:
    - name: "Create the <ORGANIZATION_NAME>/controller_teams output directory for teams in {{ output_path }}"
      ansible.builtin.file:
        path: "{{ __path }}"
        state: directory
        mode: '0755'
      vars:
        __path: "{{ output_path }}/{{ needed_path | regex_replace('/', '_') }}/controller_teams"
      loop: "{{ (teams_lookvar | map(attribute='summary_fields') | selectattr('organization', 'defined') |
                map(attribute='organization') | map(attribute='name') | list | unique) +
                ([organization] if ((teams_lookvar | map(attribute='summary_fields') |
                selectattr('organization', 'undefined') | list) | length > 0) else [])
            }}"
      loop_control:
        loop_var: needed_path
        label: "{{ __path }}"

    - name: "Add current teams to the <ORGANIZATION_NAME>/controller_teams output file in {{ output_path }}"
      ansible.builtin.template:
        src: "templates/controller_teams.j2"
        dest: "{{ __dest }}"
        mode: '0644'
      vars:
        team_organization: "{{ (current_teams_asset_value.summary_fields.organization.name | default(organization, true)) | regex_replace('/', '_') }}"
        team_id: "{{ current_teams_asset_value.id }}"
        team_name: "{{ current_teams_asset_value.name | regex_replace('/', '_') }}"
        __dest: "{{ output_path }}/{{ team_organization | regex_replace('/', '_') }}/controller_teams/{{ (team_id ~ '_') if omit_id is not defined else '' }}{{ team_name | regex_replace('/', '_') }}.yaml"
      loop: "{{ teams_lookvar }}"
      loop_control:
        loop_var: current_teams_asset_value
        label: "{{ __dest }}"

- name: "Set the team's roles"
  ansible.builtin.include_tasks: "controller_team_roles.yml"
  vars:
    team_organization: "{{ (current_team.summary_fields.organization.name | default(organization, true)) | regex_replace('/', '_') }}"
    team_name: "{{ current_team.name }}"
    teamid: "{{ current_team.id }}"
    last_team_role: "{{ current_team_index_for_roles == ((teams_lookvar | length) - 1) }}"
  loop: "{{ teams_lookvar }}"
  loop_control:
    index_var: current_team_index_for_roles
    loop_var: current_team
...
