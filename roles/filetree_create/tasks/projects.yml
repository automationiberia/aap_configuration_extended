---
- name: "Get current Projects from the API"
  set_fact:
    projects_lookvar: "{{ query('ansible.controller.controller_api', 'api/v2/projects/', query_params={'order_by': 'organization'}, host=controller_hostname, oauth_token=oauthtoken, verify_ssl=controller_validate_certs, return_all=true) }}"

- name: "Group the projects by Organization"
  set_fact:
    projects_orgs: "{{ (projects_orgs | default({})) | combine({(projects_org.organization | default('ORGANIZATIONLESS', true)): ((projects_orgs[projects_org.organization] | default([])) + [projects_org])}) }}"
    needed_paths: "{{ ((needed_paths | default([])) + [projects_org.summary_fields.organization.name | default('ORGANIZATIONLESS', true)]) | flatten | unique }}"
  loop: "{{ projects_lookvar }}"
  loop_control:
    loop_var: projects_org
    label: "{{ projects_org.summary_fields.organization.name | default('ORGANIZATIONLESS', true) }} - {{ projects_org.name }}"

- name: "Create the output directory for projects: {{ output_path }}/<ORGANIZATION_NAME>"
  file:
    path: "{{ output_path }}/{{ needed_path }}"
    state: directory
    mode: '0755'
  loop: "{{ needed_paths | default([]) }}"
  loop_control:
    loop_var: needed_path
    label: "{{ output_path }}/{{ needed_path }}"

- name: "Add current projects to the output yaml file: {{ output_path }}/<ORGANIZATION_NAME>/current_projects.yaml"
  template:
    src: "templates/current_projects.j2"
    dest: "{{ output_path }}/{{ projects_org_template.value[0].summary_fields.organization.name | default('ORGANIZATIONLESS', true) }}/current_projects.yaml"
    mode: '0644'
  vars:
    current_projects_asset_value: "{{ projects_org_template.value }}"
  loop: "{{ projects_orgs | default({}) | dict2items }}"
  loop_control:
    loop_var: projects_org_template
    label: "{{ output_path }}/{{ projects_org_template.value[0].summary_fields.organization.name | default('ORGANIZATIONLESS', true) }}/current_projects.yaml"
...
